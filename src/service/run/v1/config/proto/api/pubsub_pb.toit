// Code generated by protoc-gen-toit. DO NOT EDIT.
// source: api/pubsub.proto

import protobuf as _protobuf
import core as _core
import protobuf.protogen.google.protobuf.timestamp_pb as _timestamp

// ENUM START: TopicType
TopicType_TOPIC_TYPE_UNKOWN/int/*enum<TopicType>*/ ::= 0
TopicType_TOPIC_TYPE_CLOUD/int/*enum<TopicType>*/ ::= 1
TopicType_TOPIC_TYPE_DEVICE/int/*enum<TopicType>*/ ::= 2
TopicType_TOPIC_TYPE_DEVICE_MEMORY/int/*enum<TopicType>*/ ::= 3
// ENUM END: .api.TopicType

// MESSAGE START: .api.Topic
class Topic extends _protobuf.Message:
  type/int/*enum<TopicType>*/ := 0
  name/string := ""

  constructor
      --type/int?/*enum<TopicType>?*/=null
      --name/string?=null:
    if type != null:
      this.type = type
    if name != null:
      this.name = name

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        type = r.read_primitive _protobuf.PROTOBUF_TYPE_ENUM
      r.read_field 2:
        name = r.read_primitive _protobuf.PROTOBUF_TYPE_STRING

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_ENUM type --as_field=1
    w.write_primitive _protobuf.PROTOBUF_TYPE_STRING name --as_field=2

  num_fields_set -> int:
    return (type == 0 ? 0 : 1)
      + (name.is_empty ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_ENUM type --as_field=1)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_STRING name --as_field=2)

// MESSAGE END: .api.Topic

// MESSAGE START: .api.Subscription
// MESSAGE START: .api.Subscription.Parameters
class Subscription_Parameters extends _protobuf.Message:
  only_latest/bool := false

  constructor
      --only_latest/bool?=null:
    if only_latest != null:
      this.only_latest = only_latest

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        only_latest = r.read_primitive _protobuf.PROTOBUF_TYPE_BOOL

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_BOOL only_latest --as_field=1

  num_fields_set -> int:
    return (only_latest == false ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BOOL only_latest --as_field=1)

// MESSAGE END: .api.Subscription.Parameters

class Subscription extends _protobuf.Message:
  topic/Topic := Topic
  id/ByteArray := ByteArray 0
  parameters/Subscription_Parameters := Subscription_Parameters

  constructor
      --topic/Topic?=null
      --id/ByteArray?=null
      --parameters/Subscription_Parameters?=null:
    if topic != null:
      this.topic = topic
    if id != null:
      this.id = id
    if parameters != null:
      this.parameters = parameters

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        topic = Topic.deserialize r
      r.read_field 2:
        id = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES
      r.read_field 3:
        parameters = Subscription_Parameters.deserialize r

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    topic.serialize w --as_field=1
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES id --as_field=2
    parameters.serialize w --as_field=3

  num_fields_set -> int:
    return (topic.is_empty ? 0 : 1)
      + (id.is_empty ? 0 : 1)
      + (parameters.is_empty ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_embedded_message (topic.protobuf_size) --as_field=1)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES id --as_field=2)
      + (_protobuf.size_embedded_message (parameters.protobuf_size) --as_field=3)

// MESSAGE END: .api.Subscription

// MESSAGE START: .api.Publisher
// MESSAGE START: .api.Publisher.Device
class Publisher_Device extends _protobuf.Message:
  hardware_id/ByteArray := ByteArray 0
  job_id/ByteArray := ByteArray 0

  constructor
      --hardware_id/ByteArray?=null
      --job_id/ByteArray?=null:
    if hardware_id != null:
      this.hardware_id = hardware_id
    if job_id != null:
      this.job_id = job_id

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        hardware_id = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES
      r.read_field 2:
        job_id = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES hardware_id --as_field=1
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES job_id --as_field=2

  num_fields_set -> int:
    return (hardware_id.is_empty ? 0 : 1)
      + (job_id.is_empty ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES hardware_id --as_field=1)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES job_id --as_field=2)

// MESSAGE END: .api.Publisher.Device

class Publisher extends _protobuf.Message:
  // ONEOF START: .api.Publisher.publisher
  publisher_ := null
  publisher_oneof_case_/int? := null

  publisher_oneof_clear -> none:
    publisher_ = null
    publisher_oneof_case_ = null

  static PUBLISHER_DEVICE/int ::= 1
  static PUBLISHER_EXTERNAL/int ::= 2

  publisher_oneof_case -> int?:
    return publisher_oneof_case_

  publisher_device -> Publisher_Device:
    return publisher_

  publisher_device= publisher/Publisher_Device -> none:
    publisher_ = publisher
    publisher_oneof_case_ = PUBLISHER_DEVICE

  publisher_external -> string:
    return publisher_

  publisher_external= publisher/string -> none:
    publisher_ = publisher
    publisher_oneof_case_ = PUBLISHER_EXTERNAL

  // ONEOF END: .api.Publisher.publisher

  constructor
      --publisher_device/Publisher_Device?=null
      --publisher_external/string?=null:
    if publisher_device != null:
      this.publisher_device = publisher_device
    if publisher_external != null:
      this.publisher_external = publisher_external

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        publisher_device = Publisher_Device.deserialize r
      r.read_field 2:
        publisher_external = r.read_primitive _protobuf.PROTOBUF_TYPE_STRING

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    if publisher_oneof_case_ == PUBLISHER_DEVICE:
      publisher_.serialize w --as_field=PUBLISHER_DEVICE --oneof
    if publisher_oneof_case_ == PUBLISHER_EXTERNAL:
      w.write_primitive _protobuf.PROTOBUF_TYPE_STRING publisher_ --as_field=PUBLISHER_EXTERNAL --oneof

  num_fields_set -> int:
    return (publisher_oneof_case_ == null ? 0 : 1)

  protobuf_size -> int:
    return (publisher_oneof_case_ == PUBLISHER_DEVICE ? (_protobuf.size_embedded_message (publisher_device.protobuf_size) --as_field=1) : 0)
      + (publisher_oneof_case_ == PUBLISHER_EXTERNAL ? (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_STRING publisher_external --as_field=2) : 0)

// MESSAGE END: .api.Publisher

// MESSAGE START: .api.Message
class Message extends _protobuf.Message:
  id/int := 0
  topic/Topic := Topic
  created/_core.Time := _protobuf.TIME_ZERO_EPOCH
  data/ByteArray := ByteArray 0
  publisher/Publisher := Publisher

  constructor
      --id/int?=null
      --topic/Topic?=null
      --created/_core.Time?=null
      --data/ByteArray?=null
      --publisher/Publisher?=null:
    if id != null:
      this.id = id
    if topic != null:
      this.topic = topic
    if created != null:
      this.created = created
    if data != null:
      this.data = data
    if publisher != null:
      this.publisher = publisher

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        id = r.read_primitive _protobuf.PROTOBUF_TYPE_UINT64
      r.read_field 2:
        topic = Topic.deserialize r
      r.read_field 3:
        created = _protobuf.deserialize_timestamp r
      r.read_field 4:
        data = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES
      r.read_field 5:
        publisher = Publisher.deserialize r

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_UINT64 id --as_field=1
    topic.serialize w --as_field=2
    _protobuf.serialize_timestamp created w --as_field=3
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES data --as_field=4
    publisher.serialize w --as_field=5

  num_fields_set -> int:
    return (id == 0 ? 0 : 1)
      + (topic.is_empty ? 0 : 1)
      + ((_protobuf.time_is_zero_epoch created) ? 0 : 1)
      + (data.is_empty ? 0 : 1)
      + (publisher.is_empty ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_UINT64 id --as_field=1)
      + (_protobuf.size_embedded_message (topic.protobuf_size) --as_field=2)
      + (_protobuf.size_timestamp created --as_field=3)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES data --as_field=4)
      + (_protobuf.size_embedded_message (publisher.protobuf_size) --as_field=5)

// MESSAGE END: .api.Message

