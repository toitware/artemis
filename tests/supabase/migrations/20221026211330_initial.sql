-- This script was originally generated by the Schema Diff utility in pgAdmin 4, and
-- later changed by hand.

-- It contains the tables for the Toitware database, and the customer's side.
-- Usually, the Toitware supabase and the customer's supabase are separate
--   instances. However, when testing locally we have to merge them.

-- 'billables' is a Toitware table.
CREATE TABLE IF NOT EXISTS public.billables
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now(),
    alias text COLLATE pg_catalog."default" NOT NULL DEFAULT uuid_generate_v4(),
    fleet uuid NOT NULL,
    CONSTRAINT billables_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.billables
    OWNER to postgres;

GRANT ALL ON TABLE public.billables TO anon;

GRANT ALL ON TABLE public.billables TO authenticated;

GRANT ALL ON TABLE public.billables TO postgres;

GRANT ALL ON TABLE public.billables TO service_role;

-- 'events' is a Toitware table.
CREATE TABLE IF NOT EXISTS public.events
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    device uuid NOT NULL,
    data json NOT NULL,
    CONSTRAINT events_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.events
    OWNER to postgres;

ALTER TABLE IF EXISTS public.events
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.events TO anon;

GRANT ALL ON TABLE public.events TO authenticated;

GRANT ALL ON TABLE public.events TO postgres;

GRANT ALL ON TABLE public.events TO service_role;

-- 'fleets' is a Toitware table.
CREATE TABLE IF NOT EXISTS public.fleets
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now(),
    organization uuid NOT NULL,
    CONSTRAINT fleets_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.fleets
    OWNER to postgres;

ALTER TABLE IF EXISTS public.fleets
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.fleets TO anon;

GRANT ALL ON TABLE public.fleets TO authenticated;

GRANT ALL ON TABLE public.fleets TO postgres;

GRANT ALL ON TABLE public.fleets TO service_role;

-- 'organizations' is a Toitware table.
CREATE TABLE IF NOT EXISTS public.organizations
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now(),
    name text COLLATE pg_catalog."default" NOT NULL DEFAULT '''''::text'::text,
    CONSTRAINT organizations_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.organizations
    OWNER to postgres;

ALTER TABLE IF EXISTS public.organizations
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.organizations TO anon;

GRANT ALL ON TABLE public.organizations TO authenticated;

GRANT ALL ON TABLE public.organizations TO postgres;

GRANT ALL ON TABLE public.organizations TO service_role;

-- 'devices' is a user-side table.
CREATE TABLE IF NOT EXISTS public.devices
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    config json DEFAULT NULL,
    CONSTRAINT devices_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.devices
    OWNER to postgres;

GRANT ALL ON TABLE public.devices TO anon;

GRANT ALL ON TABLE public.devices TO authenticated;

GRANT ALL ON TABLE public.devices TO postgres;

GRANT ALL ON TABLE public.devices TO service_role;
